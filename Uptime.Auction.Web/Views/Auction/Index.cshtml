@model List<Uptime.Auction.Core.Auction>
@{
    Layout = "_Layout";
}

<div class="container">
    <div class="jumbotron">
        <h1>Auctions</h1>
    </div>
</div>
<div class="container">

    <table class="table" style="width:100%">
        <thead>
            <tr>
                <th>Item</th>
                <th>Starting Price</th>
                <th>Current Price</th>
                <th>Started</th>
                <th>Ends</th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var auction in Model)
            {
                <tr>
                    <td>@auction.Item</td>
                    <td>@auction.StartingPrice $</td>
                    <td>@auction.CurrentPrice $</td>
                    <td>@auction.Start</td>
                    <td>@auction.End</td>
                    <td>@Html.ActionLink("Details", "Details", new { auctionId = auction.Id })</td>
                </tr>
            }
        </tbody>
    </table>
    <button type="button" onclick="location.href='@Url.Action("Create")'" class="btn btn-secondary">Create New Auction</button>
</div>
<div class="container">
    <input id="chat-input" />
    <button id="chat-button" class="btn btn-secondary btn-sm">Send</button>
    <div>
        <ul id="chat-message"></ul>
    </div>
</div>

<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("ReceiveMessage", (message) => {
        const msg = message.replace(/&/g, "&amp;").replace(/</g, "&lt;").replace(/>/g, "&gt;");
        const li = document.createElement("li");
        li.textContent = msg;
        document.getElementById("chat-message").appendChild(li);
    });

    connection.start().catch(err => console.error(err.toString()));

    document.getElementById("chat-button").addEventListener("click", event => {
        //const user = document.getElementById("userInput").value;
        const message = document.getElementById("chat-input").value;
        //, user, message
        connection.invoke("SendMessage", message).catch(err => console.error(err.toString()));
        event.preventDefault();
    });

</script>
